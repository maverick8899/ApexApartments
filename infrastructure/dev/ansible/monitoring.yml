---
- hosts: monitoring
  become: yes
  become_user: root
  become_method: sudo
  vars:
      version: '0.27.0'
      hostname: alertmanager
  roles:
      - alertmanager

- hosts: monitoring
  become: yes
  become_user: root
  become_method: sudo
  vars:
      version: '2.53.1'
      hostname: prometheus
  roles:
      - prometheus

- hosts: monitoring
  become: yes
  become_user: root
  become_method: sudo
  vars:
      version: '11.1.0'
      hostname: grafana
  roles:
      - grafana
  tags:
      - grafana

- hosts: swarm
  become: yes
  become_user: root
  become_method: sudo
  vars:
      version: '1.8.2'
  roles:
      - prometheus_node_exporter

- hosts: monitoring
  become: yes
  become_user: root
  become_method: sudo
  roles:
      - geerlingguy.nginx
  tags:
      - proxy
  vars:
      #@ custom----------------------------------------------------------------
      nginx_vhosts:
          #~ PROMETHEUS ------------------------------------------------------
          - listen: '80'
            server_name: 'prometheus.local'
            return: '301 https://prometheus.local$request_uri'
            filename: 'prometheus80.local.conf'

          - listen: '443 ssl'
            http2: 'on'
            server_name: 'prometheus.local'
            # server_name_redirect: 'prometheus.local'
            # root: '/var/www/example.com'
            # index: 'index.php index.html index.htm'
            # error_page: ''
            # access_log: ''
            # error_log: ''
            access_log: '/var/log/nginx/prometheus.access.log'
            error_log: '/var/log/nginx/prometheus.error.log'
            state: 'present' #? make sure this is existing, if existing it skip override
            #   template: '{{ nginx_vhost_template }}' #? specify template to pass these objects to there
            filename: 'prometheus443.local.conf' #? name of this config
            extra_parameters: |
                ssl_certificate     /etc/nginx/ssl/prometheus.local.crt;
                ssl_certificate_key /etc/nginx/ssl/prometheus.local.key;
                ssl_protocols       TLSv1.1 TLSv1.2;
                ssl_ciphers         HIGH:!aNULL:!MD5;
                location / {
                    proxy_pass http://prometheus;
                    proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
                    proxy_redirect off;

                    proxy_set_header Host $host;
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto https;
                }
            #* prometheus end------------------------------------------------------

            #~ ALERTMANAGER ------------------------------------------------------
          - listen: '80'
            server_name: 'alertmanager.local'
            return: '301 https://alertmanager.local$request_uri'
            filename: 'alertmanager80.local.conf'

          - listen: '443 ssl'
            http2: 'on'
            server_name: 'alertmanager.local'
            access_log: '/var/log/nginx/alertmanager.access.log'
            error_log: '/var/log/nginx/alertmanager.error.log'
            state: 'present'
            filename: 'alertmanager443.local.conf' #? name of this config
            extra_parameters: |
                ssl_certificate     /etc/nginx/ssl/alertmanager.local.crt;
                ssl_certificate_key /etc/nginx/ssl/alertmanager.local.key;
                ssl_protocols       TLSv1.1 TLSv1.2;
                ssl_ciphers         HIGH:!aNULL:!MD5;
                location / {
                    proxy_pass http://alertmanager;
                    proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
                    proxy_redirect off;

                    proxy_set_header Host $host;
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto https;
                }
            #* alertmanager end------------------------------------------------------

            #~ GRAFANA ------------------------------------------------------
          - listen: '80'
            server_name: 'grafana.local'
            return: '301 https://grafana.local$request_uri'
            filename: 'grafana80.local.conf'

          - listen: '443 ssl'
            http2: 'on'
            server_name: 'grafana.local'
            access_log: '/var/log/nginx/grafana.access.log'
            error_log: '/var/log/nginx/grafana.error.log'
            state: 'present'
            filename: 'grafana443.local.conf' #? name of this config
            extra_parameters: |
                ssl_certificate     /etc/nginx/ssl/grafana.local.crt;
                ssl_certificate_key /etc/nginx/ssl/grafana.local.key;
                ssl_protocols       TLSv1.1 TLSv1.2;
                ssl_ciphers         HIGH:!aNULL:!MD5;
                location / {
                    proxy_pass http://grafana;
                    proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
                    proxy_redirect off;

                    proxy_set_header Host $host;
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto https;
                }
            #* grafana end------------------------------------------------------

      nginx_upstreams:
          - name: prometheus
            servers:
                - 'localhost:9090'
          - name: alertmanager
            servers:
                - 'localhost:9093'
          - name: grafana
            servers:
                - 'localhost:3000'
      #@ custom----------------------------------------------------------------
