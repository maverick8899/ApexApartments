---
# Used only for Debian/Ubuntu installation, as the -t option for apt.
nginx_default_release: ''

# Used only for Redhat installation, enables source Nginx repo.
nginx_yum_repo_enabled: true

# Used only for Suse installation, enables source Nginx repo.
nginx_zypper_repo_enabled: true

# Use the official Nginx PPA for Ubuntu, and the version to use if so.
nginx_ppa_use: false
nginx_ppa_version: stable

# The name of the nginx package to install.
nginx_package_name: 'nginx'

nginx_service_state: started
nginx_service_enabled: true

nginx_conf_template: 'nginx.conf.j2'
nginx_vhost_template: 'vhost.j2'

nginx_worker_processes: >-
    "{{ ansible_processor_vcpus | default(ansible_processor_count) }}"
nginx_worker_connections: '1024'
nginx_multi_accept: 'off'

nginx_error_log: '/var/log/nginx/error.log warn'
nginx_access_log: '/var/log/nginx/access.log main buffer=16k flush=2m'

nginx_sendfile: 'on'
nginx_tcp_nopush: 'on'
nginx_tcp_nodelay: 'on'

nginx_keepalive_timeout: '75'
nginx_keepalive_requests: '600'

nginx_server_tokens: 'on'

nginx_client_max_body_size: '64m'

nginx_server_names_hash_bucket_size: '64'

nginx_proxy_cache_path: ''

nginx_extra_conf_options: ''
# Example extra main options, used within the main nginx's context:
#   nginx_extra_conf_options: |
#     env VARIABLE;
#     include /etc/nginx/main.d/*.conf;

nginx_extra_http_options: ''
# Example extra http options, printed inside the main server http config:
#    nginx_extra_http_options: |
#      proxy_buffering    off;
#      proxy_set_header   X-Real-IP $remote_addr;
#      proxy_set_header   X-Scheme $scheme;
#      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
#      proxy_set_header   Host $http_host;

nginx_remove_default_vhost: true #@ falue -> true  remove conf.d/default

# Listen on IPv6 (default: true)
nginx_listen_ipv6: true

# nginx_vhosts: []

# #@ custom----------------------------------------------------------------
# nginx_vhosts:
#     #~ PROMETHEUS ------------------------------------------------------
#     - listen: '80'
#       server_name: 'prometheus.local'
#       return: '301 https://prometheus.local$request_uri'
#       filename: 'prometheus80.local.conf'

#     - listen: '443 ssl'
#       http2: 'on'
#       server_name: 'prometheus.local'
#       # server_name_redirect: 'prometheus.local'
#       # root: '/var/www/example.com'
#       # index: 'index.php index.html index.htm'
#       # error_page: ''
#       # access_log: ''
#       # error_log: ''
#       access_log: '/var/log/nginx/prometheus.access.log'
#       error_log: '/var/log/nginx/prometheus.error.log'
#       state: 'present'   #? make sure this is existing, if existing it skip override
#       #   template: '{{ nginx_vhost_template }}' #? specify template to pass these objects to there
#       filename: 'prometheus443.local.conf' #? name of this config
#       extra_parameters: |
#           ssl_certificate     /etc/nginx/ssl/prometheus.local.crt;
#           ssl_certificate_key /etc/nginx/ssl/prometheus.local.key;
#           ssl_protocols       TLSv1.1 TLSv1.2;
#           ssl_ciphers         HIGH:!aNULL:!MD5;
#           location / {
#               proxy_pass http://prometheus;
#               proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
#               proxy_redirect off;

#               proxy_set_header Host $host;
#               proxy_set_header X-Real-IP $remote_addr;
#               proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#               proxy_set_header X-Forwarded-Proto https;
#           }
#     #* prometheus end------------------------------------------------------

#     #~ ALERTMANAGER ------------------------------------------------------
#     - listen: '80'
#       server_name: 'alertmanager.local'
#       return: '301 https://alertmanager.local$request_uri'
#       filename: 'alertmanager80.local.conf'

#     - listen: '443 ssl'
#       http2: 'on'
#       server_name: 'alertmanager.local'
#       access_log: '/var/log/nginx/alertmanager.access.log'
#       error_log: '/var/log/nginx/alertmanager.error.log'
#       state: 'present'
#       filename: 'alertmanager443.local.conf' #? name of this config
#       extra_parameters: |
#           ssl_certificate     /etc/nginx/ssl/alertmanager.local.crt;
#           ssl_certificate_key /etc/nginx/ssl/alertmanager.local.key;
#           ssl_protocols       TLSv1.1 TLSv1.2;
#           ssl_ciphers         HIGH:!aNULL:!MD5;
#           location / {
#               proxy_pass http://alertmanager;
#               proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
#               proxy_redirect off;

#               proxy_set_header Host $host;
#               proxy_set_header X-Real-IP $remote_addr;
#               proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#               proxy_set_header X-Forwarded-Proto https;
#           }
#     #* alertmanager end------------------------------------------------------

#     #~ GRAFANA ------------------------------------------------------
#     - listen: '80'
#       server_name: 'grafana.local'
#       return: '301 https://grafana.local$request_uri'
#       filename: 'grafana80.local.conf'

#     - listen: '443 ssl'
#       http2: 'on'
#       server_name: 'grafana.local'
#       access_log: '/var/log/nginx/grafana.access.log'
#       error_log: '/var/log/nginx/grafana.error.log'
#       state: 'present'
#       filename: 'grafana443.local.conf' #? name of this config
#       extra_parameters: |
#           ssl_certificate     /etc/nginx/ssl/grafana.local.crt;
#           ssl_certificate_key /etc/nginx/ssl/grafana.local.key;
#           ssl_protocols       TLSv1.1 TLSv1.2;
#           ssl_ciphers         HIGH:!aNULL:!MD5;
#           location / {
#               proxy_pass http://grafana;
#               proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
#               proxy_redirect off;

#               proxy_set_header Host $host;
#               proxy_set_header X-Real-IP $remote_addr;
#               proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#               proxy_set_header X-Forwarded-Proto https;
#           }
#     #* grafana end------------------------------------------------------

# nginx_upstreams:
#     - name: prometheus
#       servers:
#           - 'localhost:9090'
#     - name: alertmanager
#       servers:
#           - 'localhost:9093'
#     - name: grafana
#       servers:
#           - 'localhost:3000'
# #@ custom----------------------------------------------------------------

# - name: myapp1
#   strategy: "ip_hash" # "least_conn", etc.
#   keepalive: 16 # optional
#   servers:
#     - "srv1.example.com"
#     - "srv2.example.com weight=3"
#     - "srv3.example.com"

nginx_log_format: |-
    '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"'
